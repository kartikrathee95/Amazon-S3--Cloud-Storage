{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/Amazon-S3--Cloud-Storage/frontend/src/components/FileManagement/FileDownload.js\";\nimport React from 'react';\nimport { downloadFile } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileDownload = ({\n  fileId\n}) => {\n  const handleDownload = async () => {\n    if (!fileId) {\n      console.error('File ID is required');\n      return;\n    }\n    try {\n      const response = await downloadFile(fileId);\n      console.log('Response Status:', response.status);\n      console.log('Response Headers:', response.headers);\n      if (response.status === 200) {\n        const blob = new Blob([response.data], {\n          type: response.headers['content-type']\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `file_${fileId}`);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(url);\n      } else {\n        console.error('Failed to download file: Status', response.status);\n      }\n    } catch (error) {\n      console.error('File download failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleDownload,\n    children: \"Download\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = FileDownload;\nexport default FileDownload;\nvar _c;\n$RefreshReg$(_c, \"FileDownload\");","map":{"version":3,"names":["React","downloadFile","jsxDEV","_jsxDEV","FileDownload","fileId","handleDownload","console","error","response","log","status","headers","blob","Blob","data","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/Amazon-S3--Cloud-Storage/frontend/src/components/FileManagement/FileDownload.js"],"sourcesContent":["import React from 'react';\nimport { downloadFile } from '../../api';\n\nconst FileDownload = ({ fileId }) => {\n  const handleDownload = async () => {\n    if (!fileId) {\n      console.error('File ID is required');\n      return;\n    }\n\n    try {\n      const response = await downloadFile(fileId);\n\n      console.log('Response Status:', response.status);\n      console.log('Response Headers:', response.headers);\n      \n      if (response.status === 200) {\n        const blob = new Blob([response.data], { type: response.headers['content-type'] });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `file_${fileId}`);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(url);\n      } else {\n        console.error('Failed to download file: Status', response.status);\n      }\n    } catch (error) {\n      console.error('File download failed:', error);\n    }\n  };\n\n  return (\n    <button onClick={handleDownload}>Download</button>\n  );\n};\n\nexport default FileDownload;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACnC,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACD,MAAM,EAAE;MACXE,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,YAAY,CAACI,MAAM,CAAC;MAE3CE,OAAO,CAACG,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAACE,MAAM,CAAC;MAChDJ,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAED,QAAQ,CAACG,OAAO,CAAC;MAElD,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACM,IAAI,CAAC,EAAE;UAAEC,IAAI,EAAEP,QAAQ,CAACG,OAAO,CAAC,cAAc;QAAE,CAAC,CAAC;QAClF,MAAMK,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;QAC5C,MAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;QACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,QAAQpB,MAAM,EAAE,CAAC;QAC/CiB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;QAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;QACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;QACbX,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC;MACjC,CAAC,MAAM;QACLV,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEC,QAAQ,CAACE,MAAM,CAAC;MACnE;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEL,OAAA;IAAQ4B,OAAO,EAAEzB,cAAe;IAAA0B,QAAA,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEtD,CAAC;AAACC,EAAA,GAlCIjC,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}