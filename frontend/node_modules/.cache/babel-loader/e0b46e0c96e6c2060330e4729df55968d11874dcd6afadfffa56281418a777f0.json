{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/frontend/src/components/UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { listFiles, setAuthToken } from '../api'; // Your API functions\nimport FileUpload from './FileManagement/FileUpload';\nimport FileList from './FileManagement/FileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setAuthToken(token);\n    }\n    const fetchFiles = async () => {\n      try {\n        const filesData = await listFiles(); // Fetch user's files\n        setFiles(filesData);\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    };\n    fetchFiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onUploadSuccess: () => fetchFiles()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(FileList, {\n      files: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPage, \"Q2RYUcr07MgGv5yVCV31YurpQrA=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","listFiles","setAuthToken","FileUpload","FileList","jsxDEV","_jsxDEV","UserPage","_s","files","setFiles","token","localStorage","getItem","fetchFiles","filesData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/frontend/src/components/UserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { listFiles, setAuthToken } from '../api'; // Your API functions\nimport FileUpload from './FileManagement/FileUpload';\nimport FileList from './FileManagement/FileList';\n\nconst UserPage = () => {\n    const [files, setFiles] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            setAuthToken(token);\n        }\n\n        const fetchFiles = async () => {\n            try {\n                const filesData = await listFiles(); // Fetch user's files\n                setFiles(filesData);\n            } catch (error) {\n                console.error('Error fetching files:', error);\n            }\n        };\n\n        fetchFiles();\n    }, []);\n\n    return (\n        <div>\n            <h1>Your Files</h1>\n            <FileUpload onUploadSuccess={() => fetchFiles()} /> {/* Refresh files after upload */}\n            <FileList files={files} />\n        </div>\n    );\n};\n\nexport default UserPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,YAAY,QAAQ,QAAQ,CAAC,CAAC;AAClD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACPT,YAAY,CAACS,KAAK,CAAC;IACvB;IAEA,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,SAAS,GAAG,MAAMd,SAAS,CAAC,CAAC,CAAC,CAAC;QACrCS,QAAQ,CAACK,SAAS,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDF,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA,CAACH,UAAU;MAACoB,eAAe,EAAEA,CAAA,KAAMT,UAAU,CAAC;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACpDhB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEd,CAAC;AAACd,EAAA,CA5BID,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}