{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/frontend/src/components/FileManagement/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [folderId, setFolderId] = useState('');\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      console.error('No file selected');\n      return;\n    }\n    try {\n      const response = await uploadFile(file, folderId ? folderId : null);\n      console.log('File uploaded successfully:', response.data);\n    } catch (error) {\n      console.error('File upload failed:', error.response ? error.response.data : error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: folderId,\n      onChange: e => setFolderId(e.target.value),\n      placeholder: \"Folder ID (optional)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"O+1W10ey6JmVBb0zDvaIhHALQkk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","folderId","setFolderId","handleUpload","e","preventDefault","console","error","response","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","files","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/frontend/src/components/FileManagement/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { uploadFile } from '../../api';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [folderId, setFolderId] = useState('');\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    if (!file) {\n      console.error('No file selected');\n      return;\n    }\n\n    try {\n      const response = await uploadFile(file, folderId ? folderId : null);\n      console.log('File uploaded successfully:', response.data);\n    } catch (error) {\n      console.error('File upload failed:', error.response ? error.response.data : error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload File</h2>\n      <input \n        type=\"file\" \n        onChange={(e) => setFile(e.target.files[0])} \n      />\n      <input \n        type=\"text\" \n        value={folderId} \n        onChange={(e) => setFolderId(e.target.value)} \n        placeholder=\"Folder ID (optional)\" \n      />\n      <button type=\"button\" onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE;MACTO,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,UAAU,CAACK,IAAI,EAAEE,QAAQ,GAAGA,QAAQ,GAAG,IAAI,CAAC;MACnEK,OAAO,CAACG,GAAG,CAAC,6BAA6B,EAAED,QAAQ,CAACE,IAAI,CAAC;IAC3D,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,CAACE,IAAI,GAAGH,KAAK,CAAC;IACpF;EACF,CAAC;EAED,oBACEX,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGb,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXI,KAAK,EAAEnB,QAAS;MAChBgB,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACc,MAAM,CAACE,KAAK,CAAE;MAC7CC,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFnB,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAACM,OAAO,EAAEnB,YAAa;MAAAQ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnCID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}