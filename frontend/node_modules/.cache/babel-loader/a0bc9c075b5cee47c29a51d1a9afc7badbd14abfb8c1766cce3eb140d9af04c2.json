{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/frontend/src/components/FileManagement/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [folderId, setFolderId] = useState('');\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleUpload = async () => {\n    if (!file) {\n      setUploadStatus('Please select a file to upload.');\n      return;\n    }\n    setUploadStatus('Uploading...');\n    try {\n      await uploadFile(file, folderId);\n      setUploadStatus('File uploaded successfully!');\n      setFile(null); // Reset the file input\n      setFolderId(''); // Reset the folder ID input\n    } catch (error) {\n      console.error('File upload failed:', error);\n      setUploadStatus('File upload failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: folderId,\n      onChange: e => setFolderId(e.target.value),\n      placeholder: \"Folder ID (optional)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"qrDFwXEZ6mdEtoqN/POnByvyxTc=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","folderId","setFolderId","uploadStatus","setUploadStatus","handleUpload","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/frontend/src/components/FileManagement/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { uploadFile } from '../../api';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [folderId, setFolderId] = useState('');\n  const [uploadStatus, setUploadStatus] = useState('');\n\n  const handleUpload = async () => {\n    if (!file) {\n      setUploadStatus('Please select a file to upload.');\n      return;\n    }\n\n    setUploadStatus('Uploading...');\n\n    try {\n      await uploadFile(file, folderId);\n      setUploadStatus('File uploaded successfully!');\n      setFile(null); // Reset the file input\n      setFolderId(''); // Reset the folder ID input\n    } catch (error) {\n      console.error('File upload failed:', error);\n      setUploadStatus('File upload failed. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload File</h2>\n      <input \n        type=\"file\" \n        onChange={(e) => setFile(e.target.files[0])} \n      />\n      <input \n        type=\"text\" \n        value={folderId} \n        onChange={(e) => setFolderId(e.target.value)} \n        placeholder=\"Folder ID (optional)\" \n      />\n      <button onClick={handleUpload}>Upload</button>\n      {uploadStatus && <p>{uploadStatus}</p>}\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACN,IAAI,EAAE;MACTK,eAAe,CAAC,iCAAiC,CAAC;MAClD;IACF;IAEAA,eAAe,CAAC,cAAc,CAAC;IAE/B,IAAI;MACF,MAAMV,UAAU,CAACK,IAAI,EAAEE,QAAQ,CAAC;MAChCG,eAAe,CAAC,6BAA6B,CAAC;MAC9CJ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CF,eAAe,CAAC,uCAAuC,CAAC;IAC1D;EACF,CAAC;EAED,oBACER,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXK,KAAK,EAAEjB,QAAS;MAChBa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACE,KAAK,CAAE;MAC7CC,WAAW,EAAC;IAAsB;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFhB,OAAA;MAAQwB,OAAO,EAAEf,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CT,YAAY,iBAAIP,OAAA;MAAAY,QAAA,EAAIL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACd,EAAA,CAzCID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}