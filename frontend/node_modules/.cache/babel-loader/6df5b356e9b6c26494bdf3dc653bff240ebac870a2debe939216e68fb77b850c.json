{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/frontend/src/components/FileManagement/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [folderId, setFolderId] = useState('');\n  const handleUpload = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    if (!file) {\n      console.error('No file selected');\n      alert('Please select a file before uploading.');\n      return;\n    }\n    try {\n      alert('Yes Yes');\n      await uploadFile(file, folderId ? folderId : null);\n      console.log('File uploaded successfully');\n      // Optionally, reset the file input and folderId\n      setFile(null);\n      setFolderId('');\n    } catch (error) {\n      console.error('File upload failed:', error.response ? error.response.data : error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: folderId,\n        onChange: e => setFolderId(e.target.value),\n        placeholder: \"Folder ID (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"O+1W10ey6JmVBb0zDvaIhHALQkk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","folderId","setFolderId","handleUpload","e","preventDefault","console","error","alert","log","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","value","placeholder","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/frontend/src/components/FileManagement/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { uploadFile } from '../../api';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [folderId, setFolderId] = useState('');\n\n  const handleUpload = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    if (!file) {\n      console.error('No file selected');\n      alert('Please select a file before uploading.');\n      return;\n    }\n     \n    try {\n      alert('Yes Yes')\n      await uploadFile(file, folderId ? folderId : null);\n      console.log('File uploaded successfully');\n      // Optionally, reset the file input and folderId\n      setFile(null);\n      setFolderId('');\n    } catch (error) {\n      console.error('File upload failed:', error.response ? error.response.data : error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload File</h2>\n      <form onSubmit={handleUpload}>\n        <input \n          type=\"file\" \n          onChange={(e) => setFile(e.target.files[0])} \n        />\n        <input \n          type=\"text\" \n          value={folderId} \n          onChange={(e) => setFolderId(e.target.value)} \n          placeholder=\"Folder ID (optional)\" \n        />\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAI,CAACN,IAAI,EAAE;MACTO,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjCC,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;IAEA,IAAI;MACFA,KAAK,CAAC,SAAS,CAAC;MAChB,MAAMd,UAAU,CAACK,IAAI,EAAEE,QAAQ,GAAGA,QAAQ,GAAG,IAAI,CAAC;MAClDK,OAAO,CAACG,GAAG,CAAC,4BAA4B,CAAC;MACzC;MACAT,OAAO,CAAC,IAAI,CAAC;MACbE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACG,QAAQ,CAACC,IAAI,GAAGJ,KAAK,CAAC;IACpF;EACF,CAAC;EAED,oBACEX,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpB,OAAA;MAAMqB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BhB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAGf,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACgB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFpB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXI,KAAK,EAAErB,QAAS;QAChBkB,QAAQ,EAAGf,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACgB,MAAM,CAACE,KAAK,CAAE;QAC7CC,WAAW,EAAC;MAAsB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3CID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}