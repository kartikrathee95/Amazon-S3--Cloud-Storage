{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/Amazon-S3--Cloud-Storage/frontend/src/components/FileManagement/FileDownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { downloadFile } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileDownload = () => {\n  _s();\n  const [fileId, setFileId] = useState('');\n  const handleDownload = async () => {\n    try {\n      const response = await downloadFile(fileId);\n      console.log(response.data); // Check what you're receiving\n\n      // Create a link to download the file\n      const blob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `file_${fileId}`); // Set filename\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url); // Clean up the URL object\n    } catch (error) {\n      console.error('File download failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Download File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: fileId,\n      onChange: e => setFileId(e.target.value),\n      placeholder: \"File ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FileDownload, \"EVGemve85yBhfJ5SYOf4rHd1rVM=\");\n_c = FileDownload;\nexport default FileDownload;\nvar _c;\n$RefreshReg$(_c, \"FileDownload\");","map":{"version":3,"names":["React","useState","downloadFile","jsxDEV","_jsxDEV","FileDownload","_s","fileId","setFileId","handleDownload","response","console","log","data","blob","Blob","type","headers","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","error","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/Amazon-S3--Cloud-Storage/frontend/src/components/FileManagement/FileDownload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { downloadFile } from '../../api';\n\nconst FileDownload = () => {\n  const [fileId, setFileId] = useState('');\n\n  const handleDownload = async () => {\n    try {\n      const response = await downloadFile(fileId);\n      console.log(response.data); // Check what you're receiving\n\n      // Create a link to download the file\n      const blob = new Blob([response.data], { type: response.headers['content-type'] });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `file_${fileId}`); // Set filename\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url); // Clean up the URL object\n    } catch (error) {\n      console.error('File download failed:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Download File</h2>\n      <input \n        type=\"text\" \n        value={fileId} \n        onChange={(e) => setFileId(e.target.value)} \n        placeholder=\"File ID\" \n      />\n      <button onClick={handleDownload}>Download</button>\n    </div>\n  );\n};\n\nexport default FileDownload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,YAAY,CAACK,MAAM,CAAC;MAC3CI,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;;MAE5B;MACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACG,IAAI,CAAC,EAAE;QAAEG,IAAI,EAAEN,QAAQ,CAACO,OAAO,CAAC,cAAc;MAAE,CAAC,CAAC;MAClF,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;MAC5C,MAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,QAAQnB,MAAM,EAAE,CAAC,CAAC,CAAC;MACjDgB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;MACbX,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjC,OAAA;MACEY,IAAI,EAAC,MAAM;MACXsB,KAAK,EAAE/B,MAAO;MACdgC,QAAQ,EAAGC,CAAC,IAAKhC,SAAS,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAS;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACFjC,OAAA;MAAQuC,OAAO,EAAElC,cAAe;MAAAwB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAnCID,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}