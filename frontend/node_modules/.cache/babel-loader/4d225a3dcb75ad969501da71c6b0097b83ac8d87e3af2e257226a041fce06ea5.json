{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/frontend/src/components/Auth/Login.js\",\n  _s = $RefreshSig$();\n// src/components/Auth/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../../api'; // Import your API call\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onSwitch\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await loginUser(username, password); // Call your login function\n      navigate('/user'); // Redirect to user page\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSwitch,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","loginUser","jsxDEV","_jsxDEV","Login","onSwitch","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","error","console","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/frontend/src/components/Auth/Login.js"],"sourcesContent":["// src/components/Auth/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../../api'; // Import your API call\n\nconst Login = ({ onSwitch }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await loginUser(username, password); // Call your login function\n            navigate('/user'); // Redirect to user page\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" required />\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required />\n            <button type=\"submit\">Login</button>\n            <p>Don't have an account? <button type=\"button\" onClick={onSwitch}>Register</button></p>\n        </form>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMb,SAAS,CAACM,QAAQ,EAAEE,QAAQ,CAAC,CAAC,CAAC;MACrCE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAMc,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBACzBf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEb,QAAS;MAACc,QAAQ,EAAGR,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,UAAU;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpHzB,OAAA;MAAOgB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEX,QAAS;MAACY,QAAQ,EAAGR,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,UAAU;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxHzB,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpCzB,OAAA;MAAAe,QAAA,GAAG,yBAAuB,eAAAf,OAAA;QAAQgB,IAAI,EAAC,QAAQ;QAACU,OAAO,EAAExB,QAAS;QAAAa,QAAA,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEf,CAAC;AAACtB,EAAA,CAvBIF,KAAK;EAAA,QAGUJ,WAAW;AAAA;AAAA8B,EAAA,GAH1B1B,KAAK;AAyBX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}