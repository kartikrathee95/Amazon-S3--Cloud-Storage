{"ast":null,"code":"var _jsxFileName = \"/home/kartik/S3 Project/Amazon-S3--Cloud-Storage/frontend/src/components/FileManagement/FileDownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { downloadFile } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileDownload = () => {\n  _s();\n  const [fileId, setFileId] = useState('');\n  const handleDownload = async () => {\n    if (!fileId) {\n      console.error('File ID is required');\n      return; // Prevent download if fileId is empty\n    }\n    try {\n      const response = await downloadFile(fileId);\n\n      // Log response for debugging\n      console.log('Response Status:', response.status);\n      console.log('Response Headers:', response.headers);\n      if (response.status === 200) {\n        // Check if the response is successful\n        // Create a link to download the file\n        const blob = new Blob([response.data], {\n          type: response.headers['content-type']\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `file_${fileId}`); // Set filename\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(url); // Clean up the URL object\n      } else {\n        console.error('Failed to download file: Status', response.status);\n      }\n    } catch (error) {\n      console.error('File download failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Download File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: fileId,\n      onChange: e => setFileId(e.target.value),\n      placeholder: \"File ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Downloaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(FileDownload, \"EVGemve85yBhfJ5SYOf4rHd1rVM=\");\n_c = FileDownload;\nexport default FileDownload;\nvar _c;\n$RefreshReg$(_c, \"FileDownload\");","map":{"version":3,"names":["React","useState","downloadFile","jsxDEV","_jsxDEV","FileDownload","_s","fileId","setFileId","handleDownload","console","error","response","log","status","headers","blob","Blob","data","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/kartik/S3 Project/Amazon-S3--Cloud-Storage/frontend/src/components/FileManagement/FileDownload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { downloadFile } from '../../api';\n\nconst FileDownload = () => {\n  const [fileId, setFileId] = useState('');\n\n  const handleDownload = async () => {\n    if (!fileId) {\n      console.error('File ID is required');\n      return; // Prevent download if fileId is empty\n    }\n\n    try {\n      const response = await downloadFile(fileId);\n\n      // Log response for debugging\n      console.log('Response Status:', response.status);\n      console.log('Response Headers:', response.headers);\n      \n      if (response.status === 200) { // Check if the response is successful\n        // Create a link to download the file\n        const blob = new Blob([response.data], { type: response.headers['content-type'] });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `file_${fileId}`); // Set filename\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(url); // Clean up the URL object\n      } else {\n        console.error('Failed to download file: Status', response.status);\n      }\n    } catch (error) {\n      console.error('File download failed:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Download File</h2>\n      <input \n        type=\"text\" \n        value={fileId} \n        onChange={(e) => setFileId(e.target.value)} \n        placeholder=\"File ID\" \n      />\n      <button onClick={handleDownload}>Downloaded</button>\n    </div>\n  );\n};\n\nexport default FileDownload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACF,MAAM,EAAE;MACXG,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MACpC,OAAO,CAAC;IACV;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,YAAY,CAACK,MAAM,CAAC;;MAE3C;MACAG,OAAO,CAACG,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAACE,MAAM,CAAC;MAChDJ,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAED,QAAQ,CAACG,OAAO,CAAC;MAElD,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAAE;QAC7B;QACA,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACM,IAAI,CAAC,EAAE;UAAEC,IAAI,EAAEP,QAAQ,CAACG,OAAO,CAAC,cAAc;QAAE,CAAC,CAAC;QAClF,MAAMK,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;QAC5C,MAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;QACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,QAAQrB,MAAM,EAAE,CAAC,CAAC,CAAC;QACjDkB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;QAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;QACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;QACbX,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACLV,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEC,QAAQ,CAACE,MAAM,CAAC;MACnE;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEP,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlC,OAAA;MACEe,IAAI,EAAC,MAAM;MACXoB,KAAK,EAAEhC,MAAO;MACdiC,QAAQ,EAAGC,CAAC,IAAKjC,SAAS,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CI,WAAW,EAAC;IAAS;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACFlC,OAAA;MAAQwC,OAAO,EAAEnC,cAAe;MAAAyB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAAChC,EAAA,CA/CID,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}